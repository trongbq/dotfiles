# ~/.bash_prompt 

COLOR_BLACK="\e[1;30m"
COLOR_RED="\e[1;31m"
COLOR_GREEN="\e[1;32m"
COLOR_YELLOW="\e[1;33m"
COLOR_BLUE="\e[1;34m"
COLOR_PURPLE="\e[1;35m"
COLOR_CYAN="\e[1;36m"
COLOR_WHITE="\e[1;37m"
COLOR_RESET="\e[0m"

function git_color {
  local git_status="$(git status 2> /dev/null)"

  if [[ ! "$git_status" =~ "working tree clean" ]]; then
    echo -e $COLOR_GREEN
  elif [[ "$git_status" =~ "Your branch is ahead of" ]]; then
    echo -e $COLOR_RED
  elif [[ "$git_status" =~ "nothing to commit" ]]; then
    echo -e $COLOR_WHITE
  else
    echo -e $COLOR_WHITE
  fi
}

function git_branch {
  local git_status="$(git status 2> /dev/null)"
  local on_branch="On branch ([^${IFS}]*)"
  local on_commit="HEAD detached at ([^${IFS}]*)"

  if [[ "$git_status" =~ $on_branch ]]; then
    local branch=${BASH_REMATCH[1]}
    echo "($branch)"
  elif [[ "$git_status" =~ $on_commit ]]; then
    local commit=${BASH_REMATCH[1]}
    echo "($commit)"
  fi
}

PS1="\[$COLOR_YELLOW\]\W"          # basename of pwd
PS1+="\[\$(git_color)\]"        # colors git status
PS1+="\$(git_branch)"           # prints current branch
PS1+="\[$COLOR_BLUE\] ‚óè \[$COLOR_RESET\]"   # '#' for root, else '$'
export PS1
